name: Delete Old Cloudflare Pages Deployments for "bot"

on:
  push:
    branches:
      - main

jobs:
  delete_deployments:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install jq (for JSON parsing)
        run: sudo apt-get install jq

      - name: Configure Cloudflare API Token
        run: echo "CLOUDFLARE_API_TOKEN=${{ secrets.CLOUDFLARE_API_TOKEN }}" >> $GITHUB_ENV

      - name: Fetch and Verify Account & Project Information
        run: |
          echo "Fetching list of projects under the Cloudflare account..."

          # Fetch all projects in the account
          project_response=$(curl -s -X GET "https://api.cloudflare.com/client/v4/accounts/${{ secrets.CLOUDFLARE_ACCOUNT_ID }}/pages/projects" \
            -H "Authorization: Bearer $CLOUDFLARE_API_TOKEN" \
            -H "Content-Type: application/json")

          echo "Project List Response: $project_response"

          # Extract Project ID for "bot"
          CLOUDFLARE_PROJECT_ID=$(echo "$project_response" | jq -r '.result[] | select(.name=="bot") | .id')

          if [ -z "$CLOUDFLARE_PROJECT_ID" ] || [ "$CLOUDFLARE_PROJECT_ID" == "null" ]; then
            echo "Error: Project 'bot' not found in account ID '${{ secrets.CLOUDFLARE_ACCOUNT_ID }}'!"
            exit 1
          fi

          echo "Project 'bot' found! Project ID: $CLOUDFLARE_PROJECT_ID"
          echo "CLOUDFLARE_PROJECT_ID=$CLOUDFLARE_PROJECT_ID" >> $GITHUB_ENV

      - name: Fetch and Delete Old Deployments
        run: |
          if [ -z "$CLOUDFLARE_PROJECT_ID" ]; then
            echo "Error: CLOUDFLARE_PROJECT_ID is empty, aborting!"
            exit 1
          fi

          echo "Fetching deployments for project ID: $CLOUDFLARE_PROJECT_ID"

          # Fetch deployments
          deployments=$(curl -s -X GET "https://api.cloudflare.com/client/v4/accounts/${{ secrets.CLOUDFLARE_ACCOUNT_ID }}/pages/projects/$CLOUDFLARE_PROJECT_ID/deployments" \
            -H "Authorization: Bearer $CLOUDFLARE_API_TOKEN" \
            -H "Content-Type: application/json")

          echo "Deployments API Response: $deployments"

          if [[ "$deployments" == *'"result":null'* ]]; then
            echo "Error: No deployments found. The project ID might be incorrect."
            exit 1
          fi

          current_date=$(date +%s)

          echo "$deployments" | jq -r '.result[] | select(.created_on | tonumber < ('$current_date' - 2592000)) | .id' | while read deployment_id; do
            echo "Deleting deployment $deployment_id for project 'bot'"
            curl -X DELETE "https://api.cloudflare.com/client/v4/accounts/${{ secrets.CLOUDFLARE_ACCOUNT_ID }}/pages/projects/$CLOUDFLARE_PROJECT_ID/deployments/$deployment_id" \
              -H "Authorization: Bearer $CLOUDFLARE_API_TOKEN" \
              -H "Content-Type: application/json"
          done
