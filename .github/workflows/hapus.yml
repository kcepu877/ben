name: Hapus Log Deployments Cloudflare Pages (Spesifik)

on:
  workflow_dispatch:

jobs:
  hapus-log-cloudflare:
    runs-on: ubuntu-latest

    env:
      TARGET_PAGES: "bot" # Ganti dengan proyek spesifik

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install jq
        run: sudo apt-get install jq -y

      - name: Debug Output JSON
        run: |
          API_TOKEN="${{ secrets.CF_API_TOKEN }}"
          ACCOUNT_ID="${{ secrets.CF_ACCOUNT_ID }}"
          CLOUDFLARE_API="https://api.cloudflare.com/client/v4"
          HEADER_AUTH="Authorization: Bearer $API_TOKEN"
          HEADER_CT="Content-Type: application/json"

          echo "üìå Mengecek daftar Pages Projects..."
          RESPONSE=$(curl -s -X GET "$CLOUDFLARE_API/accounts/$ACCOUNT_ID/pages/projects" \
            -H "$HEADER_AUTH" -H "$HEADER_CT")

          echo "üìå Output JSON dari API (formatted):"
          echo "$RESPONSE" | jq .

          # Cek apakah proyek target ada
          PAGES_FOUND=$(echo "$RESPONSE" | jq -r '.result[].name' | grep -w "$TARGET_PAGES" || true)
          if [ -z "$PAGES_FOUND" ]; then
            echo "‚ö†Ô∏è ERROR: Proyek '$TARGET_PAGES' tidak ditemukan di akun Cloudflare!"
            exit 1
          fi

      - name: Hapus Log Deployments Cloudflare Pages (Spesifik)
        run: |
          # === Konfigurasi ===
          API_TOKEN="${{ secrets.CF_API_TOKEN }}"
          ACCOUNT_ID="${{ secrets.CF_ACCOUNT_ID }}"
          CLOUDFLARE_API="https://api.cloudflare.com/client/v4"
          HEADER_AUTH="Authorization: Bearer $API_TOKEN"
          HEADER_CT="Content-Type: application/json"

          echo "üîç Memproses Project: $TARGET_PAGES"

          # === Hapus Semua Deployments ===
          echo "üìå Mengambil daftar Deployments untuk Project: $TARGET_PAGES..."
          RESPONSE=$(curl -s -X GET "$CLOUDFLARE_API/accounts/$ACCOUNT_ID/pages/projects/$TARGET_PAGES/deployments" \
            -H "$HEADER_AUTH" -H "$HEADER_CT")

          echo "üìå Debug Response API untuk Project: $TARGET_PAGES"
          echo "$RESPONSE" | jq .

          # Cek apakah ada deployments
          if echo "$RESPONSE" | jq -e '.result' >/dev/null; then
            DEPLOYMENTS=$(echo "$RESPONSE" | jq -r '.result[].id')
          else
            echo "‚úÖ Tidak ada Deployment yang ditemukan untuk Project: $TARGET_PAGES."
            exit 0
          fi

          # Hapus setiap deployment
          for deployment in $DEPLOYMENTS; do
            echo "üóëÔ∏è Menghapus Deployment: $deployment"
            DELETE_RESPONSE=$(curl -s -X DELETE "$CLOUDFLARE_API/accounts/$ACCOUNT_ID/pages/projects/$TARGET_PAGES/deployments/$deployment" \
              -H "$HEADER_AUTH" -H "$HEADER_CT")

            # Debug Response setelah delete
            echo "üìå Response API setelah delete Deployment: $deployment"
            echo "$DELETE_RESPONSE" | jq .

            if echo "$DELETE_RESPONSE" | jq -e '.success' | grep -q 'true'; then
              echo "‚úÖ Deployment '$deployment' berhasil dihapus."
            else
              echo "‚ö†Ô∏è Gagal menghapus Deployment '$deployment'."
            fi
          done

          echo "üéâ Semua log deployments untuk proyek '$TARGET_PAGES' telah dihapus!"
